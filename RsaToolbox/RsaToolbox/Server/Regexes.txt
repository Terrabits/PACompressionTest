CASE-INSENSITIVE

Menu (captures entire menu string):
Capture 1: Menu without initial ':'
Note: Remove \?? for non-query
(ie initiate binary transfer)
Note: Remove * prefix for binary also
^(?:[:*]?)([a-z]+\d*(?::[a-z]+\d*)*)\??

Menu
Non-capture
^(?:[:*]?)(?:[a-z]+\d*(?::[a-z]+\d*)*)\??

SubMenu
Capture name, index
([a-z]+)(\d*)(\\?)

Space:
(?:[ \t]+)

Optional space:
(?:[ \t]*)

Float:
-?\d+(?:\.\d*)?(?:E-?\d+)?

Float with Units:
Capture 1: Float
Capture 2: SiPrefix
(-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:(([fpumkMGT]))(?:Hz|s|dB|deg|rad)?)))?

Float with Units:
Non-capturing subparts
(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?

String:
"[^"\0]*"
'[^'\0]*'

Word:
[^#\s,"'\0]+

Argument:
(?:[ \t]*)((?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)

Argument:
Non-capturing subparts
(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)


Arguments:
Non-capturing subparts
(?:arg1)(?:(?:,)(?:arg2))*

(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*))(?:(?:,)(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)))*

Binary transfer argument
Always end with ','
Add * to end to match multiples
(?:(?:arg),)

(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)),

Argument
Ignore ',' if found
^((arg))(?:,?)

(((?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)))(?:,?)

Command EOI:
(?:[\n;]+)

-------- command parsing

Initiating binary data transfer
^(?:menu_non-query)(?:space)(?:binary arguments)(?:[ \t]*#)

^(?:(?::?)(?:[a-z]+\d*(?::[a-z]+\d*)*))(?:[ \t]+)(?:(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)),)*(?:[ \t]*#)

SCPI command
^(:?menu)(?:optional_space)(?:(?:space)(?:parameters))?(EOL)

^(:?(?:[:*]?)(?:[a-z]+\d*(?::[a-z]+\d*)*)\??)(?:[ \t]*)(?:(?:[ \t]+)(?:(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*))(?:(?:,)(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)))*))?(?:[\n;]+)

SCPI command with parameters
^(?:menu)(?:space)(?:parameters)(EOL)

^(?:(?:[:*]?)(?:[a-z]+\d*(?::[a-z]+\d*)*)\??)(?:[ \t]+)(?:(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*))(?:(?:,)(?:(?:[ \t]*)(?:(?:"[^"\0]*")|(?:'[^'\0]*')|(?:(?:-?\d+(?:\.\d*)?(?:E-?\d+)?)(?:(?:[ \t]*)(?:(?:[fpumkMGT](?:Hz|s|dB|deg|rad)?)))?)|(?:[^#\s,"'\0]+))(?:[ \t]*)))*)(?:[\n;]+)



Escaped:
